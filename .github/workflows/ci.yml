on:
  workflow_call:

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Protobuf
        run: sudo apt-get install -y protobuf-compiler

      - name: Run Clippy
        run: cargo clippy --all-targets

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: clippy
    
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: stable

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Protobuf
        run: sudo apt-get install -y protobuf-compiler

      - name: Build Project
        run: cargo build --release

  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: build


    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: stable

      - name: Cache Cargo Dependencies
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Protobuf
        run: sudo apt-get install -y protobuf-compiler

      - name: Run Tests
        run: cargo test

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install Rust
        uses: actions-rs/toolchain@v1.0.6
        with:
          profile: minimal
          toolchain: stable

      - name: Install Protobuf
        run: sudo apt-get install -y protobuf-compiler

      - name: Install Tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run Coverage
        run: cargo tarpaulin --out Html

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4.6.2
        with:
          name: coverage-report
          path: ./tarpaulin-report.html
